#BlueJ class context
comment0.target=ComparisonHandler
comment0.text=\n\ This\ file\ is\ part\ of\ "Property\ Hunter"\n\ -\ a\ London\ property\ viewing\ application.\n\n\ A\ ComparisonHandler\ handles\ functional\ logic\ comparisons\ between\ two\ boroughs,\n\ and\ is\ a\ helper\ class\ for\ ComparisonController.\n\n\ @author\ Ubayd\ Khan\ (k20044237),\ Mohammed\ Chowdhury\ (k21074018),\ Omar\ Ahmad\ (k210524117),\ Muhammad\ Beg\ (k21057641)\n\ @version\ 30.03.2022\n
comment1.params=model
comment1.target=ComparisonHandler(Model)
comment1.text=\n\ The\ constructor\ of\ the\ ComparisonHandler\ class\n\ @param\ model\ The\ model\ object\ of\ the\ application\n
comment10.params=borough
comment10.target=java.lang.String\ getAnnualIncome(java.lang.String)
comment10.text=\n\ Gets\ the\ total\ annual\ income\ of\ the\ borough\ from\ all\ its\ properties\ by\ totalling\ the\ price\ multiplied\ by\ \n\ its\ availiblity\ 365\ for\ each\ listing\n\ @param\ borough\ The\ borough\ to\ be\ queried\n\ @return\ The\ total\ annual\ income\ of\ the\ borough\n
comment11.params=borough
comment11.target=java.lang.String\ getNumberOfHosts(java.lang.String)
comment11.text=\n\ Gets\ the\ number\ of\ unique\ hosts\ participating\ in\ the\ borough\n\ @param\ borough\ The\ borough\ to\ be\ queried\n\ @return\ The\ number\ of\ hosts\ participating\ in\ the\ borough\n
comment12.params=borough
comment12.target=java.lang.String\ getNumberOfPrivateRooms(java.lang.String)
comment12.text=\n\ Gets\ the\ number\ of\ private\ rooms\ in\ the\ borough\n\ @param\ borough\ The\ borough\ to\ be\ queried\n\ @return\ The\ number\ of\ private\ rooms\ in\ the\ borough\n
comment2.params=
comment2.target=void\ setComparisonValues()
comment2.text=\n\ Sets\ the\ comparison\ values\ for\ each\ comparison\ type\ enum\n
comment3.params=
comment3.target=java.util.ArrayList\ getComparisonListings()
comment3.text=\n\ @return\ A\ list\ of\ comparison\ listings\n
comment4.params=
comment4.target=java.util.ArrayList\ getFavouriteBoroughs()
comment4.text=\n\ @return\ A\ list\ of\ favourited\ boroughs\n
comment5.params=borough
comment5.target=void\ toggleFavouriteBorough(java.lang.String)
comment5.text=\n\ Adds\ or\ removes\ the\ passed\ borough\ from\ the\ list\ of\ favourited\ boroughs\n\ @param\ borough\ The\ borough\ which\ will\ be\ favourited/unfavourited\n
comment6.params=boroughOne\ boroughTwo
comment6.target=void\ setBoroughs(java.lang.String,\ java.lang.String)
comment6.text=\n\ Clears\ the\ listings\ and\ sets\ the\ comparison\ values\ for\ a\ new\ comparison\n\ @param\ boroughOne\ The\ first\ borough\ to\ be\ compared\n\ @param\ boroughTwo\ The\ second\ borough\ to\ be\ compared\n
comment7.params=borough
comment7.target=java.lang.String\ getNumberOfProperties(java.lang.String)
comment7.text=\n\ @return\ The\ total\ number\ of\ properties\ within\ the\ borough\n\ @param\ borough\ The\ borough\ which\ will\ be\ queried\n\ @return\ The\ number\ of\ properties\ within\ the\ borough\n
comment8.params=borough
comment8.target=java.lang.String\ getAveragePrice(java.lang.String)
comment8.text=\n\ Gets\ the\ average\ price\ of\ the\ borough\ by\ finding\ the\ total\ price\ across\ all\ properties\n\ and\ then\ dividing\ it\ by\ the\ number\ of\ properties\ within\ the\ borough\n\ @param\ borough\ The\ borough\ to\ be\ queried\n\ @return\ The\ average\ price\ of\ each\ property\ within\ the\ borough\n
comment9.params=borough
comment9.target=java.lang.String\ getAverageReviews(java.lang.String)
comment9.text=\n\ Gets\ the\ average\ number\ of\ reviews\ of\ the\ borough\ by\ finding\ the\ total\ number\ of\ reviews\n\ and\ then\ dividng\ it\ by\ the\ number\ of\ properties\ within\ the\ borough\n\ @param\ borough\ The\ borough\ to\ be\ queried\n\ @return\ The\ average\ number\ of\ reviews\ within\ the\ borough\n
numComments=13
