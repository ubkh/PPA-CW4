#BlueJ class context
comment0.target=StatisticsHandler
comment0.text=\n\ This\ file\ is\ part\ of\ "Property\ Hunter"\n\ -\ a\ London\ property\ viewing\ application.\n\n\ A\ StatisticsHandler\ contains\ functional\ logic\ that\ acts\ as\ a\ helper\ class,\ which\ is\ called\n\ from\ StatisticsPanelController\ objects.\ It\ deals\ with\ returning\ the\ relevant\ statistics\n\ in\ String\ format,\ according\ to\ the\ listings\ available\ after\ being\ filtered\ in\ several\ ways.\n\ \n\ @author\ Ubayd\ Khan\ (k20044237),\ Mohammed\ Chowdhury\ (k21074018),\ Omar\ Ahmad\ (k210524117),\ Muhammad\ Beg\ (k21057641)\n\ @version\ 30.03.2022\n
comment1.params=model
comment1.target=StatisticsHandler(Model)
comment1.text=\n\ The\ constructor\ of\ class\ StatisticsHandler\ which\ initalises\ the\ default\ filter\ settings\n\ @param\ model\ The\ model\ object\ of\ the\ application\n
comment10.params=
comment10.target=java.lang.String\ getMostExpensiveBorough()
comment10.text=\n\ Gets\ most\ expensive\ borough\ by\ totalling\ the\ prices\ of\ all\ properties\ within\ each\ borough\n\ @return\ The\ most\ expensive\ borough\n
comment11.params=
comment11.target=java.lang.String\ getHostWithMostIncome()
comment11.text=\n\ Gets\ the\ host\ with\ most\ income\ by\ calculating\ all\ hosts'\ incomes\ and\ choosing\ the\ largest\n\ @return\ The\ name\ of\ the\ host\ with\ the\ most\ income\n
comment12.params=
comment12.target=java.lang.String\ getHostInMostBoroughs()
comment12.text=\n\ Gets\ the\ host\ that\ owns\ property\ in\ the\ most\ number\ of\ boroughs\ \n\ @return\ The\ host\ in\ most\ boroughs\n
comment13.params=
comment13.target=java.util.HashMap\ getHostsBoroughs()
comment13.text=\n\ Gets\ a\ hash\ map\ that\ associates\ each\ host\ with\ a\ set\ of\ boroughs\ they\ own\ property\ in\n\ @return\ A\ hash\ map\ that\ associates\ each\ host\ with\ a\ set\ of\ boroughs\ they\ own\ property\ in\n
comment14.params=
comment14.target=java.lang.String\ getHostWithMostPrivRoomsAvailable()
comment14.text=\n\ Gets\ the\ host\ who\ has\ the\ highest\ total\ availability\ of\ properties\ which\ are\ of\ room\ type\ private\ rooms\n\ @return\ The\ host\ who\ has\ the\ highest\ total\ availability\ of\ properties\ which\ are\ of\ room\ type\ private\ rooms\n
comment15.params=
comment15.target=java.util.HashMap\ getHostsPrivRoomNights()
comment15.text=\n\ Gets\ a\ hash\ map\ that\ associates\ host\ with\ their\ number\ of\ private\ room\ nights\n\ @return\ A\ hash\ map\ that\ associates\ host\ with\ their\ number\ of\ private\ room\ nights\n
comment16.params=
comment16.target=int[]\ getRoomTypeDistribution()
comment16.text=\n\ Gets\ an\ array\ where\ each\ at\ each\ index,\ the\ number\ of\ a\ particular\n\ room\ type\ is\ stored\ (0\ for\ private\ rooms,\ 1\ for\ shared\ rooms,\ 2\ for\ entire\ home/apartments)\n\ @return\ \n
comment17.params=
comment17.target=java.util.HashMap\ getHostAnnualIncomes()
comment17.text=\n\ Gets\ a\ hash\ map\ that\ associates\ hosts\ with\ their\ annual\ incomes\ where\ a\ host's\ annual\ income\n\ is\ the\ total\ price\ of\ all\ their\ properties\ multiplied\ by\ each\ of\ their\ 365\ availability\ \n\ @return\ A\ hash\ map\ that\ associates\ hosts\ with\ their\ annual\ incomes\n
comment18.params=
comment18.target=java.util.HashMap\ getBoroughPrices()
comment18.text=\n\ Gets\ a\ hash\ map\ that\ associates\ boroughs\ with\ the\ total\ price\ of\ all\ the\ properties\ within\ them\n\ @return\ A\ hash\ map\ that\ associates\ boroughs\ with\ the\ total\ price\ of\ all\ the\ properties\ within\ them\n
comment19.params=id
comment19.target=java.lang.String\ getHostNameFromId(java.lang.String)
comment19.text=\n\ Gets\ the\ host\ name\ from\ their\ id\n\ @return\ The\ host\ name\ from\ their\ id\n
comment2.params=keys
comment2.target=void\ initFilters(java.lang.String[])
comment2.text=\n\ Creates\ entries\ within\ the\ filters\ hash\ map\ and\ defaults\ its\ value\ to\ 0.0\n\ @param\ keys\ The\ keys\ that\ will\ be\ stored\ within\ filters\n
comment3.params=key\ value
comment3.target=void\ setFilter(java.lang.String,\ double)
comment3.text=\n\ Sets\ the\ value\ of\ an\ entry\ within\ the\ filters\ hash\ map\ according\ to\ the\ value\ passed\n\ into\ the\ method\n\ @param\ key\ The\ key\ of\ the\ entry\ to\ be\ updated\n\ @param\ value\ The\ value\ of\ what\ the\ entry\ will\ be\ updated\ to\n
comment4.params=
comment4.target=java.util.HashMap\ getFilters()
comment4.text=\n\ @return\ Hashmap\ associating\ filter\ name\ with\ filter\ value.\n
comment5.params=
comment5.target=java.util.ArrayList\ getListings()
comment5.text=\n\ Gets\ an\ array\ list\ of\ listings\ which\ fit\ the\ filters\ criteria\ and\ is\ in\ price\ range\n\ @return\ An\ array\ list\ of\ listings\ which\ fit\ the\ filters\ criteria\ and\ is\ in\ price\ range\n
comment6.params=statisticType
comment6.target=java.lang.String\ getStatisticValue(StatisticType)
comment6.text=\n\ Takes\ in\ a\ statistic\ value\ and\ returns\ the\ value\ from\ the\ call\ of\ its\ associated\ method\n\ @return\ String\ The\ string\ value\ of\ the\ statistic\ value\ returned\n
comment7.params=
comment7.target=java.lang.String\ getAverageNumberOfReviewsPerProperty()
comment7.text=\n\ Gets\ the\ average\ number\ of\ reviews\ per\ property\n\ @return\ The\ string\ value\ of\ the\ average\ number\ of\ reviews\ per\ property\n
comment8.params=
comment8.target=java.lang.String\ getNumberOfAvailableProperties()
comment8.text=\n\ Counts\ and\ returns\ the\ total\ number\ of\ available\ properties\n\ @return\ The\ number\ of\ available\ properties\n
comment9.params=
comment9.target=java.lang.String\ getNumberOfEntireHomeAndApartments()
comment9.text=\n\ Counts\ and\ returns\ the\ total\ number\ of\ entire\ home/apt\ properties\n\ @return\ The\ number\ of\ entire\ home\ and\ apartments\n
numComments=20
